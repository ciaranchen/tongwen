# 单行注释
# 不支持多行注释

####################################################
## 1. Primitive Datatypes and Operators
####################################################

# 有数焉
3；

# 可以使用直接的数学符号
1 + 1;      # => 2
8 - 1;     # => 7
10 * 2;    # => 20
35 / 5;    # => 7.0

# 布尔值为阴阳
阳； # => True
阴； # => False

# 布尔操作
非(阳)；  # => False
非（阴）；  # => True

其 阳 或 于 阴；
其 阳 且 于 阴；

# 字符串字面量
“这是一句话”；

# 声明语句
有 3 为 乙, 4 为 甲；

# 比较操作
其 甲 同 于 乙；
其 甲 等 于 乙；
其 甲 大 于 乙；
其 甲 小 于 乙；
其 甲 大或等 于 乙；
其 甲 小或等 于 乙；


# 赋值操作
以 甲 为 乙；

# 前序表达式
取 1，(取 2，4，6，8 三 值 求和) 加；

# 中序表达式
其 甲 加 于 乙；

# 后序表达式
加（3,4）；

# 函数定义
有 术 者 由（数 者 乙，言 者 丙，言 者 丁）求 数 {
    得 乙；
} 为 首个参数；


# 合 { 数 者 3 为 乙， “丁” 为 丙 } 为 甲;
# 其 （甲 的 乙） 等 于 3；
